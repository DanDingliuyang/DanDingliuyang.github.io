<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo主题LiveForCode介绍</title>
    <url>/2020/08/01/Hexo%E4%B8%BB%E9%A2%98LiveForCode%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://hexo.io/zh-cn/">Hexo</a> 是高效的静态站点生成框架，他基于 <a href="https://nodejs.org/en/">Node.js</a>。通过 Hexo 你可以轻松地使用 <a href="https://daringfireball.net/projects/markdown/">Markdown</a> 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 <a href="https://hexo.io/zh-cn/docs/tag-plugins.html">标签插件</a> 来快速的插入特定形式的内容。在这篇文章中，假定你已经成功安装了 Hexo，并使用 Hexo 提供的命令创建了一个站点。  </p>
<blockquote>
<p>你可以访问 <a href="https://hexo.io/zh-cn/docs/">Hexo 的文档</a> 了解如何安装 Hexo  </p>
</blockquote>
<p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。其中，一份位于 Hexo 根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong> ， 后者称为 <strong>主题配置文件</strong> 。  </p>
<h2 id="主题预览"><a href="#主题预览" class="headerlink" title="主题预览"></a>主题预览</h2><p><a href="https://www.notes.worstone.cn/">Hexo - Live For Code</a>  </p>
<h2 id="安装Live-For-Code"><a href="#安装Live-For-Code" class="headerlink" title="安装Live For Code"></a>安装Live For Code</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至 Hexo 根目录的 themes 目录下，然后修改下配置文件即可。具体到 LiveForCode 来说，安装步骤如下。  </p>
<h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>如果你熟悉 Git，建议你使用 <code>克隆最新版本</code> 的方式，之后的更新可以通过 <code>git pull</code> 来快速更新，而不用再次下载压缩包替换。  </p>
<ol>
<li><p>克隆最新版本<br>在终端窗口下，定位到 Hexo 站点目录下。使用 Git Checkout 代码：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/first19326/hexo-liveforcode</span><br></pre></td></tr></table></figure>
<p>将克隆下来的文件夹中的 <code>LiveForCode</code> 文件夹移动至站点的 <code>themes</code> 目录下，并将 <code>source</code> 文件夹中的 <code>about</code>、<code>category</code>、<code>comment</code>、<code>donate</code>、<code>friend</code> 以及 <code>tag</code> 文件夹移动至 Hexo 站点目录下的 <code>source</code> 文件夹中。这些文件夹分别对应着 <strong>关于</strong> 、 <strong>标签</strong> 、 <strong>留言板</strong> 、 <strong>赞赏</strong> 、 <strong>友情链接</strong> 以及 <strong>分类</strong> 页面，其中的 <code>index.md</code> 中的内容为各个页面显示的内容，大家可以根据自己的情况进行修改。  </p>
</li>
<li><p>下载稳定版本<br>前往 LiveForCode 版本发布页面。<br>选择你所需要的版本，下载 Download 区域下的 Source Code (zip) 到本地。<br>解压所下载的压缩包，并将解压后的文件夹中的 <code>LiveForCode</code> 文件夹移动至站点的 <code>themes</code> 目录下，并将 <code>source</code> 文件夹中的 <code>about</code>、<code>category</code>、<code>comment</code>、<code>donate</code>、<code>friend</code> 以及 <code>tag</code> 文件夹移动至 Hexo 站点目录下的 <code>source</code> 文件夹中。这些文件夹分别对应着 <strong>关于</strong> 、 <strong>标签</strong> 、 <strong>留言板</strong> 、 <strong>赞赏</strong> 、 <strong>友情链接</strong> 以及 <strong>分类</strong> 页面，其中的 <code>index.md</code> 中的内容为各个页面显示的内容，大家可以根据自己的情况进行修改。  </p>
</li>
</ol>
<h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>与所有 Hexo 主题启用的模式一样。当 克隆/下载 完成后，打开 <strong>站点配置文件</strong> ，找到 theme 字段，并将其值更改为 <code>LiveForCode</code>。  </p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">LiveForCode</span></span><br></pre></td></tr></table></figure>

<p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 <code>hexo clean</code> 来清除 Hexo 的缓存。  </p>
<h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 <code>hexo s --debug</code>。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。<br>当命令行输出中提示出： <code>INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code> 此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。  </p>
<h2 id="站点设定"><a href="#站点设定" class="headerlink" title="站点设定"></a>站点设定</h2><p>在 <strong>站点配置文件</strong> 中，我修改了标签归档页面、分类归档页面以及文章归档页面的路径，如果大家使用默认的路径，则需要修改 <strong>主题配置文件</strong> 中的菜单设置。  </p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">category</span></span><br></pre></td></tr></table></figure>


<h2 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h2><p>由于 <strong>主题配置文件</strong> 可能有所改动，就不在这里给大家详细说明，我会在 <strong>主题配置文件</strong> 中添加适当的注释，麻烦大家参考页面以及注释内容进行修改。  </p>
<h2 id="404-页面设定"><a href="#404-页面设定" class="headerlink" title="404 页面设定"></a>404 页面设定</h2><p>主题中有相应的 <code>404</code> 错误页面，是单独的静态页面，没有添加到模板中。在使用主题的时候，需要大家将其中的 <strong>返回首页</strong> 的跳转链接 <code>https://notes.worstone.cn</code> 替换为自己网站的地址。<br>404 错误页面在主题文件夹 <code>LiveForCode</code> 中的 <code>source</code> 文件夹中。  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;buttons&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;reload();&quot;</span>&gt;</span>刷新页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://notes.worstone.cn&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>返回首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h2 id="第三方服务"><a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h2><h3 id="Algolia-Search"><a href="#Algolia-Search" class="headerlink" title="Algolia Search"></a>Algolia Search</h3><p>1.前往 <a href="https://www.algolia.com/">Algolia</a> 注册页面，注册一个新账户。 可以使用 GitHub 或者 Google 账户直接登录，注册后的 14 天内拥有所有功能（包括收费类别的）。之后若未续费会自动降级为免费账户，免费账户总共有 10,000 条记录，每月有 100,000 的可以操作数。注册完成后，创建一个新的 Index，这个 Index 将在后面使用。<br>2.Index 创建完成后，此时这个 Index 里未包含任何数据。 接下来需要安装 <code>Hexo Algolia</code> 扩展，这个扩展的功能是搜集站点的内容并通过 API 发送给 Algolia。前往站点根目录，执行命令安装：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure>

<p>3.编辑 <strong>站点配置文件</strong> ，新增以下配置：  </p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">&#x27;applicationID&#x27;</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">&#x27;apiKey&#x27;</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">&#x27;...&#x27;</span></span><br></pre></td></tr></table></figure>

<p>注：这里的 <strong>apiKey</strong> 为 <code>Search-Only API Key</code><br>4.当配置完成，在站点根目录下执行一下命令更新 Index。请注意观察命令的输出。  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export HEXO_ALGOLIA_INDEXING_KEY=Admin API Key</span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure>

<p>5.Hexo Algolia 命令设置选项  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Options:</span><br><span class="line">  --dry-run       Does not push content to Algolia (default: false).</span><br><span class="line">  --flush         Resets the Algolia index before starting the indexation (default: false).</span><br><span class="line">  --indexing-key  An algolia API key with add/delete records permissions.</span><br><span class="line">		              It should be different than the search-only API key configured in _config.yml.</span><br><span class="line">  --layouts       A comma-separated list of page layouts to index (default: &quot;page&quot;).</span><br></pre></td></tr></table></figure>

<p>说明：<br><code>--flush</code> 如果是 <code>false</code> 则每一次都会直接添加内容到 Algolia 相关的 Index 中，如果不是第一次提交，则将其设置为 <code>true</code><br><code>--layouts</code> 如果使用默认设置，提交的时候会将分类归档、标签归档、赞赏、留言板等页面内容提交到 Algolia， 在搜索的时候，将会搜索到分类归档、标签归档、赞赏、留言板等页面内容，建议使用时将其设置为 <code>post</code>。  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo algolia --flush true --layouts post</span><br></pre></td></tr></table></figure>

<h3 id="设置-RSS"><a href="#设置-RSS" class="headerlink" title="设置 RSS"></a>设置 RSS</h3><p>1.安装 <code>Hexo-Feed</code> 插件。前往站点根目录，执行命令安装：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure>

<p>2.根据个人需求，编辑 <strong>站点配置文件</strong> ：  </p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>

<h3 id="文章数据统计"><a href="#文章数据统计" class="headerlink" title="文章数据统计"></a>文章数据统计</h3><p>文章数据统计基于 <code>Valine.js</code> 插件实现。<br>实现方式：在文章列表页面加载 <code>Valine.js</code>， 只要 Valine 配置项中的 <code>el</code> 元素不存在即不会加载评论框相关内容。  </p>
<p>1.文章评论数统计<br>Valine 会自动查找页面中 class 值为 <code>valine-comment-count</code> 的元素，获取其 <code>data-xid</code> 为查询条件。并将得到的值填充到其 class 的值为 <code>valine-comment-count</code> 的元素里：  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- data-xid 将作为查询条件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;valine-comment-count&quot;</span> <span class="attr">data-xid</span>=<span class="string">&quot;&lt;Your/Path/Name&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.文章阅读量统计<br>Valine 从 <code>v1.2.0</code> 开始支持文章阅读量统计。  </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Valine(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#vcomments&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">visitor</span>: <span class="literal">true</span> <span class="comment">// 阅读量统计</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>如果开启了阅读量统计，Valine 会自动检测 LeanCloud 应用中是否存在 <code>Counter</code> 类，如果不存在会自动创建，无需手动创建。<br>Valine 会自动查找页面中 class 值为 <code>leancloud_visitors</code> 的元素，获取其 <code>id</code> 为查询条件。并将得到的值填充到其 class 的值为 <code>leancloud-visitors-count</code> 的子元素里：  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- id 将作为查询条件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;&lt;Your/Path/Name&gt;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;leancloud_visitors&quot;</span> <span class="attr">data-flag-title</span>=<span class="string">&quot;Your Article Title&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;leancloud-visitors-count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="评论列表"><a href="#评论列表" class="headerlink" title="评论列表"></a>评论列表</h3><p>评论功能使用的是 <code>Valine.js</code> 插件，配置详情请参见 <a href="https://valine.js.org/">Valine</a>。  </p>
<blockquote>
<p>特别说明 <strong>主题配置文件</strong> 中的 Valine 的 <code>appId</code> 与 <code>appKey</code> 请大家自行配置自己的参数。如果评论数据提交到我的 LeanCloud 工作空间，我并不能保证数据的完整性。  </p>
</blockquote>
<h3 id="赞赏页面"><a href="#赞赏页面" class="headerlink" title="赞赏页面"></a>赞赏页面</h3><p>赞赏页面使用了 <a href="https://github.com/Kaiyuan/sponsor-page">Sponsor Page</a>，并做了相关修改使其适应博客样式。感兴趣的小伙伴自行去了解吧。  </p>
<h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><p>音乐播放器功能是使用 <code>APlayer.js</code> 以及 <code>Meting.js</code> 实现，配置详情参见 <a href="https://aplayer.js.org/#/home">APlayer</a>、<a href="https://github.com/metowolf/MetingJS">Meting</a>。<br>主题中有两种实现方式，一种是 <code>APlayer.js</code> 结合 <code>Meting.js</code> 的实现方式，另外一种是 <code>APlayer.js</code> 单独的实现方式，两种实现方式各有优缺点：<br>第一种实现方式配置简单，并且可以从各个音乐平台解析音乐。由于是从各个平台解析，故而不是特别稳定，并且在 <code>IE</code> 浏览器中需要特殊设置。<br>第二种实现方式配置相对复杂，需要单独提供音乐相关信息，但是十分稳定，且对于 <code>IE</code> 浏览器也可兼容，无需特殊配置。<br>主题中默认以 <strong>第一种实现方式</strong> 实现，第二种实现方式为备选方案，在第一种实现方式出现问题的时候，可以切换到第二种实现方式，保证网站的稳定运行。<br>针对第二种实现方式需要 <strong>注意</strong> 的地方：<br><code>APlayer.js</code> 是基于 <code>HTML 5 Audio</code> 实现的一款音乐播放器插件，故而支持的音频格式有限，包括：<code>MP3</code>、<code>Wav</code> 以及 <code>Ogg</code> 格式，并且不同浏览器对这三种音频格式的支持也各有不同，详细信息大家参考 <a href="https://www.runoob.com/html/html5-audio.html">HTML5 Audio(音频)</a>。如果音频格式不支持，可以通过音频转换工具进行格式转换。<br><code>APlayer.js</code> 是通过 <code>XMLHttpRequest</code> 获取歌词文件，所以存在 <strong>跨域</strong> 问题。可以考虑将歌词文件放在主题文件夹 <code>LiveForCode</code> 的 <code>source</code> 文件夹下（ <strong>注意</strong> ：这里的 <code>source</code> 文件夹不是 <code>Hexo</code> 站点目录下的 <code>source</code> 文件夹），解决跨域的问题。由于 <code>jsDelivr</code> 在响应请求的时候，会添加 <code>access-control-allow-origin: *</code> 的响应标头信息，故而不存在跨域问题，也可以使用这种方式。不过需要注意的是，<code>jsDelivr</code> 对资源的大小有所限制，不可以超过 <strong>50M</strong> 。<br><code>APlayer.js</code> 获取到歌词后会将歌词中的空白行去掉，由于是单行显示歌词，所以有译文的双行歌词，只会显示下面一行歌词，可以将译文歌词拼接在歌词原文的后面解决这个问题。  </p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="关于-jQuery-版本"><a href="#关于-jQuery-版本" class="headerlink" title="关于 jQuery 版本"></a>关于 jQuery 版本</h3><p>mCustomScroll 目前暂不支持 <code>jQuery3.5</code> 以及以上版本，否则会导致代码块中的滚动条失效。  </p>
<h3 id="Position-fixed-定位问题"><a href="#Position-fixed-定位问题" class="headerlink" title="Position: fixed 定位问题"></a>Position: fixed 定位问题</h3><p>由于背景动画的 <code>z-index</code> 为 <code>-1</code>，导致在IE浏览器中，菜单等多处 <code>position: fixed</code> 样式的部件出现闪烁抖动的问题，所以默认在IE浏览器中关闭了背景动画。如果是高版本IE，例如IE11则可在设置 -&gt; Internet选项 -&gt; 高级，将浏览中的’使用平滑滚动’选项勾掉，也可以解决这个问题。  </p>
<h3 id="关于-Github-Page-的使用"><a href="#关于-Github-Page-的使用" class="headerlink" title="关于 Github Page 的使用"></a>关于 Github Page 的使用</h3><p>详情请参见 <a href="https://hexo.io/zh-cn/docs/github-pages">将 Hexo 部署到 GitHub Pages</a>。<br>Github Page 支持设置自己的域名，建议在 Hexo 主题的 source 文件夹下新增一个 CNAME 的文件，将自己的域名配置进去，否则每次提交的时候会覆盖掉相关域名设置。<br>在域名的解析设置中，可以使用 CNAME 解析方式，也可以使用 A记录 的方式。如果是 A记录 的方式，则需要检索当前 Github Page 对应的服务器 IP 地址。  </p>
<h3 id="关于-CDN"><a href="#关于-CDN" class="headerlink" title="关于 CDN"></a>关于 CDN</h3><p>CDN 可以在阿里云购买相关的 CDN 服务器，效果肯定是更好，这里使用的是 <a href="https://www.jsdelivr.com/">jsDelivr</a> 免费的 CDN 加速服务。但是有一个弊端，如果修改代码的时候没有Github的相关版本信息，则很容易读取到 jsDelivr 的缓存数据，而不是修改后的最新代码。至于这个缓存时间，我也拿捏不准。不过免费而且效果不错的东西，大家就不要要求太多了。  </p>
<h3 id="Cannot-read-property-‘LongCang’-of-undefined"><a href="#Cannot-read-property-‘LongCang’-of-undefined" class="headerlink" title="Cannot read property ‘LongCang’ of undefined"></a>Cannot read property ‘LongCang’ of undefined</h3><p>这个问题比较常见，是主题文件路径不正确导致的。因为很多小伙伴都询问这个问题，所以在这里进行一个说明。    </p>
<p><img src="https://www.notes.worstone.cn/image/structure.png" alt="Hexo-LiveForCode"></p>
<p>直接从 Github 下载 <code>Zip</code> 格式的文件解压后或 Github <code>Clone</code> 后的文件结构应该如上图所示。这里需要注意，是将解压后文件夹中的 <code>LiveForCode</code> 文件夹复制到 <code>Hexo</code> 的 <code>themes</code> 文件夹下，而不是将解压后的 <code>Hexo-LiveForCode</code> 复制到 <code>themes</code> 文件夹下。</p>
<h3 id="标签、分类、归档等页面-404-或-Cannot-GET"><a href="#标签、分类、归档等页面-404-或-Cannot-GET" class="headerlink" title="标签、分类、归档等页面 404 或 Cannot GET"></a>标签、分类、归档等页面 <code>404</code> 或 <code>Cannot GET</code></h3><p>由于 <code>Hexo</code> 的标签、分类、归档等页面的目录修改为了 <code>tag</code>、<code>category</code>、<code>archive</code>，故使用默认的 <strong>站点配置文件</strong> 会出现这个问题。需要将 <strong>站点配置文件</strong> 中的 <code>Directory</code> 相关配置修改为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_dir:</span> <span class="string">tag</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archive</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">category</span></span><br></pre></td></tr></table></figure>


<h2 id="阶段计划"><a href="#阶段计划" class="headerlink" title="阶段计划"></a>阶段计划</h2><p>1.使用 Vue.js 重构项目<br>2.整理模板的样式文件<br>3.加入 Pjax，优化页面加载速度<br>4.补充国际化支持语言<br>5.考虑是否加入黑夜模式  </p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>由于我还是一名小白，可能还有很多问题无法解决，这个主题也可能存在很多不尽如人意的地方，在细节方面我也会尽力地去修改，也欢迎大家提出自己的问题，以及主题的相关建议，也欢迎大家提交代码。如果觉得这个主题不错，欢迎大家去使用。当然了，如果能赞赏我一下，我也是不介意的。(●ˇ∀ˇ●)  </p>
<p>这个主题可定制的地方目前可能比较少，欢迎大家修改，也希望这个主题能够越来越好看，也希望越来越多的人能够喜欢。  </p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/01/HelloWorld/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/08/07/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>一个记录：第一篇博客</title>
    <url>/2021/08/07/%E4%B8%80%E4%B8%AA%E8%AE%B0%E5%BD%95%EF%BC%9A%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="如果三体中第二任执剑人是郑爽，那么人类的未来会是怎样？"><a href="#如果三体中第二任执剑人是郑爽，那么人类的未来会是怎样？" class="headerlink" title="如果三体中第二任执剑人是郑爽，那么人类的未来会是怎样？"></a><a href="https://www.zhihu.com/question/459324244/answer/1891490392">如果三体中第二任执剑人是郑爽，那么人类的未来会是怎样？</a></h1><p>罗辑用双手把开关交给了爽子，爽子也用双手接过了这个地球历史上最沉重的东西，于是，两个世界的支点由一位一百零一岁的老人转移到一个年轻女子身上。</p>
<p>开关带着罗辑的体温。它真的很像剑柄，上面有四个按钮，其中一个在顶端，为防止意外启动，除了按下按钮需要很大的力度外，还要按一定顺序按动才能生效。</p>
<p>罗辑轻轻后退两步，向她微微点头致意，然后转身迈着稳健的步伐向大门走去。</p>
<p>门厅中，智子突然出现了，挡住了罗辑，并拉着他跑到了一间小屋。在这间小屋里，罗辑看到了程心和艾AA。</p>
<p>“罗辑先生的威慑度曲线，像一条凶猛的眼镜蛇，在百分之九十高度波动，而维德……”，智子遥望着烟尘后面落得只剩一角的夕阳，眼中透出明显的恐惧，然后用力摇摇头，仿佛正努力从自己的脑子中赶走什么，“他根本没有曲线，在所有外部环境参数下，他的威慑度全顶在百分之一百，那个魔鬼！</p>
<p>“至于爽子……”，智子慢慢走到电脑的屏幕前，打开“人格分析系统”，并打开“爽子.jpg”文件。</p>
<p>“看上去什么曲线都没有。”程心小声说。</p>
<p> “看不到一点儿波动。”艾AA惊奇地说，“只有黑乎乎的一片和两个坐标轴！”</p>
<p> “爽子的威慑度能高到什么程度呢？”罗辑问。</p>
<p> 为了解答这个问题，智子点击了旁边的一个按钮，那是用来放大函数显示范围的。她用手指不断地点击着按钮，从电脑所带的一个大显示屏上，可以看到放大后的威慑度函数图像。屏幕上所显示的，仍然是黑乎乎的一片和两个白色的坐标轴。</p>
<p> “显示范围的放大倍数是多少？”罗辑问。</p>
<p> “一百倍。”智子指指显示屏一角的一个数字，同时把放大倍数调到一千倍。</p>
<p> 放大后的显示屏，仍然是黑乎乎的一片和两个白色的坐标轴。</p>
<p> “你这系统中病毒了吧？”艾AA说。</p>
<p> 智子关掉爽子的威慑度文件，打开程心的威慑度文件，其他三人凑过来一起看着显示屏，只见在她的人格分析系统中，程心的威慑度在百分之十上下波动，像一条爬行的小蚯蚓。被放大一千倍的曲线，在屏幕上变得像蚂蚁乱爬一样诡异。智子又重新点开爽子的威慑度文件，显示屏上再次出现了黑乎乎的一片和两个白色的坐标轴。</p>
<p>  “把函数显示范围的倍数再调大十倍。”罗辑说。</p>
<p>  这超出了图片的实际大小，智子进行了一连串的操作，把计算爽子威慑度的源文件打开，重新执行威慑度计算程序，调出原始统计图，现在放大倍数是一万倍。</p>
<p> 放大后的显示屏仍是黑乎乎的一片。而三体人技术所能计算出的最高威慑度，只能达到百分之一百，像一条直线。</p>
<p>  “调到十万倍。”艾AA说。</p>
<p>   他们看到的仍是黑乎乎的一片和两个白色的坐标轴。</p>
<p>​    “一百万倍。”</p>
<p>​    黑乎乎的一片。</p>
<p>​    “一千万倍！”</p>
<p>​    在这个放大倍数下，已经可以看到两个坐标轴的箭头了，但屏幕上显示的仍是黑乎乎的一片，看不到一点儿函数曲线波动的迹象。</p>
<p>​    “再把倍数调大些！”</p>
<p>​    智子摇摇头，这已经超出了人格分析系统里数学模型的约束条件。</p>
<p>  两个多世纪前，阿瑟·克拉克在他的科幻小说《2001：太空奥德赛》中描述了一个外星超级文明留在月球上的黑色方碑，考察者用普通尺子量方碑的三道边，其长度比例是1∶4∶9，以后，不管用何种更精确的方式测量，穷尽了地球上测量技术的最高精度，方碑三边的比例仍是精确的1∶4∶9，没有任何误差。克拉克写道：那个文明以这种方式，狂妄地显示了自己的力量。</p>
<p>​    现在，三体人和人类正面对着一种更狂妄的力量显示。</p>
<p>   “真有人有这么高的威慑度？”程心惊叹道。</p>
<p>   “有，”智子调出了它的调查结果，“歌者文明每个人的威慑度就是这么高。”</p>
<p>​    “但爽子是人类啊！”</p>
<p>  罗辑想了一会儿，向周围看看说：“联系一下威慑控制中心的监控室吧，确定一下爽子的手指在什么位置。”</p>
<p> 这事情由威慑控制中心的监控人员做了，爽子旁边的红外线探测仪发出了几束极细的波束，在爽子手的表面标示出她手指的接触位置。智子用脑机接口收集了爽子的脑电波，计算了她按下开关的可能性，在一千万倍的放大倍率下，看到的仍是黑乎乎的一片。</p>
<p> “她说了什么？”罗辑问，很快得到了中心的回答：“按都按不动，烦死了！”。</p>
<p>罗辑飘离开去，在电脑上点击着什么，其他人来不及制止，他已经把视频通话连接到了威慑控制中心，爽子接起了电话。</p>
<p>“我可以谈谈条件吗？比如，我可以给你开出日薪208万。”罗辑仰着头看着爽子的全息投影。</p>
<p>“在我们这里，只有彼此爱慕之人才会这样做啊。”爽子扇了自己两个巴掌。</p>
<p>“这不是谈判，是三体人和人类继续活下去的要求，我只希望知道你是答应还是不答应。”</p>
<p>“要么以后再也不答应，要么就有自己的答应方式。”，爽子漫不经心地按下几个按钮。</p>
<p>“让你的手指从按钮上离开，停止按下按钮！”</p>
<p>“反弹，out我特慢！”，爽子按下最后一个按钮。</p>
<p>罗辑颓然地把电脑扔掉，不再看爽子，低头深思起来，三个人的目光，还有威慑中心员工的目光，都集中到他身上。</p>
<p>“什么人才能做到这一点？”</p>
<p>“只有一种：疯子文明在地球的代言人。”透过屏幕可以看到，罗辑的额头上已满是冷汗，“我早该想到，宇宙这么大，黑暗森林不可能只有＇猎人＇和＇婴儿＇两种类型文明的存在，也许＇疯子＇也是文明的一种。”</p>
<p>“那……她到底想干什么？”艾AA脱口问道。</p>
<p> “谁知道？也许她真是一个圣母，但带给人类的是另外一个信息……”罗辑说，同时把目光从电脑上移开。</p>
<p> “什么？”</p>
<p>“抛弃你们，与我有何相干？”</p>
<p>这句话带来一阵死寂，就在三个人和威慑中心的员工咀嚼其含义时，罗辑突然说：“快跑。”</p>
<p>这两个字是低声说出的，但紧接着，他扬起双手，声嘶力竭地大喊：“傻孩子们，快——跑——啊！”</p>
<p>奇怪的是，仅仅过了几秒钟，地球就遭到了白洞攻击。</p>
<p>空白，全是空白，除了白色的大厅、白色的大字，外面的一切也都是空白，人类仿佛悬浮在牛奶宇宙之中。这是一团直径160亿光年的牛奶，在这广漠的空白中，人类找不到任何依托。</p>
<p>空白开始消散，上方四十五千米厚的地层又显示出沉重的存在，那是沉积的时间。在最下面的一层，就是紧压在威慑控制中心上面的，可能是四十亿年前的沉积层，那时地球刚刚诞生五亿年。那一片浑浊的海，那是海的婴儿状态，海面被不间断的闪电击打着；那时的太阳，是迷蒙的天空中一个毛茸茸的光团，在海面上映出一片血红；以很短的间隔，天空中不时出现另一些光团，拖着长长的火尾撞击海面，这些陨石激起的海啸会把巨浪推上岩浆横流的大陆，水火相遇产生的遮天蒸汽云让太阳更加黯淡……与这地狱的惨烈不同，浑浊的海水中悄悄地酝酿着小小的故事。这时，有机分子在闪电和宇宙射线中诞生，它们碰撞、融合、裂解。这是一场漫长的积木游戏，持续了五亿年。终于，一根分子链颤抖着分裂，复制出另一根完全相同的分子链，然后它们分别吸附周围的有机小分子，再次复制自己……在这场积木游戏中，产生这样自我复制的分子链的几率如此之小，如同一阵龙卷风卷起一堆金属垃圾，落下后就组装成一辆奔驰车一般。</p>
<p>太古代21亿年，元古代的震旦纪18亿3000万年；然后是古生代：寒武纪7000万年，奥陶纪6000万年，志留纪4000万年，泥盆纪5000万年，石炭纪6500万年，二叠纪5500万年；然后中生代开始了：三叠纪3500万年，侏罗纪5800万年，白垩纪7000万年；然后是新生代：第三纪6450万年，第四纪250万年。然后人类出现，与以前漫长的岁月相比仅是弹指一挥间，王朝与时代像焰火般变幻，古猿扔向空中的骨头棒还没落回地面就变成了宇宙飞船。</p>
<p>最后，这35亿年风雨兼程的行进在一个小小的人类个体面前停下了，她只是在地球上生活过的一千亿人中的一个，她手中握着一个红色的开关。</p>
<p>她发出的引力波信息，不是坐标的广播，而是攻击的暗号。地球的坐标，早在叶文洁回答时，已经泄露。</p>
]]></content>
  </entry>
  <entry>
    <title>笑话</title>
    <url>/2021/08/07/%E7%AC%91%E8%AF%9D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="你怎么看待「网抑云」这个梗？"><a href="#你怎么看待「网抑云」这个梗？" class="headerlink" title="你怎么看待「网抑云」这个梗？"></a><a href="https://www.zhihu.com/question/399334775/answer/1356167294">你怎么看待「网抑云」这个梗？</a></h1><p>作者：提剑书生<br>链接：<a href="https://www.zhihu.com/question/399334775/answer/1356167294">https://www.zhihu.com/question/399334775/answer/1356167294</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<p>1</p>
<p>“交作业。”课代表站在我旁边。</p>
<p>闻言，我面颊抽搐，抱头而泣，在黑暗中硬生生挤出一个笑容：</p>
<p>“你说，连作业都整不完的我，怎么给她整个世界。”</p>
<p>2</p>
<p>我被老师叫去办公室训了一节课，身心俱惫。</p>
<p>回来时同桌问我怎么样。</p>
<p>我气若游丝：“没事。”</p>
<p>“你怎么有气无力的？”</p>
<p>我笑了笑：“温柔吗？半条命换的。”</p>
<p>3</p>
<p>语文作业填诗词。</p>
<p>“窗含西岭千秋雪，-”</p>
<p>我深深地叹了口气，目光游离而孤独。</p>
<p>这可是我最喜欢的话啊。</p>
<p>“先当孙子后当爷。”我如是写道。</p>
<p>不愧是你啊，杜甫桑。</p>
<p>4</p>
<p>语文老师把我叫到办公室问我什么意思。</p>
<p>我深吸一口气：</p>
<p>“这种事情见得多了，我只想说懂得都懂，不懂的我也不多解释，毕竟自己知道就好，细细品吧。你们也别来问我怎么了，利益牵扯太大，说了对你我都没好处，当不知道就行了，其余的我只能说这里面水很深，牵扯到很多东西。详细情况你们自己是很难找的，网上大部分已经删除干净了，所以我只能说懂得都懂。”</p>
<p>5</p>
<p>班里同学在讨论小孩子。</p>
<p>A：“熊孩子真讨厌。”</p>
<p>B：“我蛮喜欢孩子的。”</p>
<p>C：“婴儿很麻烦啊。”</p>
<p>我眼含泪水：“生不出人，我很抱歉。”</p>
<p>同学：¿</p>
<p>6</p>
<p>课上老师提问：“如何赏析‘春风不相识， 何事入罗帏’？”</p>
<p>我缓缓站起：“记得那是2012年吧，我把这句歌词分享给她听，她问怎么了，我说没事，随手把她删了。我想，爱一个人，不打扰是最后的温柔吧。”</p>
<p>“这是李白的诗谢谢。”</p>
<p>“哦那没事了。”</p>
<p>7</p>
<p>“班里笑的最欢的人，手腕上有疤。”</p>
<p>同桌惊讶地看着我的手腕：“你怎么会有？”</p>
<p>“蚊子咬的疙瘩被我抠破了。”</p>
<p>8</p>
<p>同桌骂我：“一天天整这些烂活，你死不死啊？”</p>
<p>我浑身一颤，心脏有点疼。</p>
<p>“有的人八岁埋了，八十岁才死。”</p>
<p>同桌拍手叫好：“医学奇迹。”</p>
<p>9</p>
<p>回到家，我爸看我蜷缩在床上。</p>
<p>我爸：“咋滴啦？”</p>
<p>我看了他一眼，轻轻摇了摇头：“你不懂。”</p>
<p>我爸闻言大怒：“净整没用的，我活了大半辈子了有啥不懂的？！”</p>
<p>“导数法证明不等式你懂吗？”</p>
<p>10</p>
<p>学校发了新校服。</p>
<p>同桌：“这是纯棉的，可软和了。”</p>
<p>我对他笑笑：“那能穿到这件校服的人都很温柔吧。”</p>
<p>11</p>
<p>放假时半夜和朋友聊天。</p>
<p>“那个视频很好笑啊哈哈哈哈哈哈哈。”</p>
<p>“稍等，到点了。”</p>
<p>我打开网抑云，随便找了首歌。</p>
<p>“我每天都在笑，你猜我开不开心。”</p>
<p>退出，返回QQ。</p>
<p>“可不是嘛哈哈哈哈哈哈哈。”</p>
<p>12</p>
<p>我点了保存文档，希望能给别人带去快乐。</p>
<p>可我的快乐又在哪呢。</p>
]]></content>
      <tags>
        <tag>笑话</tag>
      </tags>
  </entry>
</search>
